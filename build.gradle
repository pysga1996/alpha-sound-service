buildscript {
    ext {
        springBootVersion = '2.4.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.vengeance'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-data'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
//	implementation 'org.springframework.security:spring-security-jwt'
    implementation 'org.springframework.security.oauth:spring-security-oauth2'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.4.0'
    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'
    testCompileOnly 'org.projectlombok:lombok:1.18.18'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.18'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.firebase:firebase-admin:6.11.0'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    ignoreFailures = true
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(configurations.compile)
}

stage.dependsOn(copyToLib)

gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

